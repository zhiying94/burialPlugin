apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'
apply plugin: 'signing'
//apply plugin: 'com.gradle.plugin-publish'

repositories {
    google()
    gradlePluginPortal()
    mavenCentral()
}
//buildscript {
//    repositories {
//        gradlePluginPortal()
//        mavenCentral()
//        google()
//    }
//    dependencies {
//        classpath "gradle.plugin.com.gradle.publish:plugin-publish-gradle:1.1.0"
//    }
//}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    compileOnly 'com.android.tools.build:gradle:8.5.2'
    compileOnly 'org.ow2.asm:asm:9.6'
    compileOnly 'org.ow2.asm:asm-commons:9.6'
}

group = 'com.zhiy.burial'
version = '2.0.0'

gradlePlugin {
    plugins {
        burialPlugin {
            id = 'burial-plugin'
            implementationClass = 'com.yan.burial.BurialPlugin'
        }
    }
}

//pluginBundle {
//    website = 'https://github.com/zhiying94/burialPlugin'
//    vcsUrl = 'https://github.com/zhiying94/burialPlugin'
//    description = 'Burial Plugin 功能描述'
//    tags = ['android', 'plugin']
//
//    plugins {
//        burialPlugin {
//            id = 'burial-plugin'          // 插件 ID，别人引用时用这个
//            displayName = 'Burial Plugin'
//        }
//    }
//}


tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
//
def userName
def userKey
File file = rootProject.file('local.properties')
if (file.exists()) {
    //加载资源
    InputStream inputStream = rootProject.file('local.properties').newDataInputStream();
    Properties properties = new Properties()
    properties.load(inputStream)

    if (properties.containsKey("bintray.user")) {
        userName = properties.getProperty("bintray.user")
    }
    if (properties.containsKey("bintray.apikey")) {
        userKey = properties.getProperty("bintray.apikey")
    }
}
//// 源代码打包任务
//task sourcesJar(type: Jar) {
//    archiveClassifier = 'sources'
//    from sourceSets.main.allSource
//}
//
//// 文档包任务
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    archiveClassifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//// 配置工件
//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}
//
//// 发布配置
//publishing {
//    publications {
//        maven(MavenPublication) {
//            from components.java
//            artifactId = 'burial-plugin'
//
//            artifact sourcesJar
//            artifact javadocJar
//
//            pom {
//                name = 'Burial Plugin'
//                description = 'A Gradle plugin for Android method timing instrumentation using ASM'
//                url = 'https://github.com/your-username/burial-plugin'
//
//                licenses {
//                    license {
//                        name = 'Apache License, Version 2.0'
//                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
//                        distribution = 'repo'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id = 'yan157'
//                        name = 'Yan'
//                        email = 'your-email@example.com'
//                    }
//                }
//
//                scm {
//                    connection = 'scm:git:git://github.com/your-username/burial-plugin.git'
//                    developerConnection = 'scm:git:ssh://github.com/your-username/burial-plugin.git'
//                    url = 'https://github.com/your-username/burial-plugin'
//                }
//            }
//        }
//    }
//
//    repositories {
//        maven {
//            name = 'OSSRH'
//            url = version.endsWith('SNAPSHOT') ?
//                    'https://s01.oss.sonatype.org/content/repositories/snapshots/' :
//                    'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
//
//            credentials {
//                username = findProperty('ossrhUsername') ?: System.getenv('OSSRH_USERNAME')
//                password = findProperty('ossrhPassword') ?: System.getenv('OSSRH_PASSWORD')
//            }
//        }
//    }
//}
//
//// 签名配置 - 可选
//signing {
//    def signingKeyId = findProperty("signing.keyId")
//    def signingPassword = findProperty("signing.password")
//    def signingSecretKeyRingFile = findProperty("signing.secretKeyRingFile")
//
//    if (signingKeyId && signingPassword && signingSecretKeyRingFile) {
//        useInMemoryPgpKeys(signingKeyId, signingSecretKeyRingFile, signingPassword)
//        sign publishing.publications.maven
//    }
//}
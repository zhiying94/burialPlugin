plugins {
  id 'com.android.library'
  id 'maven-publish'
  id 'signing'
}

def userName
def userKey
File file = rootProject.file('local.properties')
if (file.exists()) {
  //加载资源
  InputStream inputStream = rootProject.file('local.properties').newDataInputStream();
  Properties properties = new Properties()
  properties.load(inputStream)

  if (properties.containsKey("bintray.user")) {
    userName = properties.getProperty("bintray.user")
  }
  if (properties.containsKey("bintray.apikey")) {
    userKey = properties.getProperty("bintray.apikey")
  }
}

group = 'com.yan.burial.method.timer'
version = '2.0.0'

android {
  namespace 'com.yan.burial.method.timer'
  compileSdk 34

  defaultConfig {
    minSdk 21
    targetSdk 34
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lint { abortOnError false }

  publishing {
    singleVariant("release") {
      withSourcesJar()
    }
  }
}

dependencies {
}
repositories {
  mavenCentral()
}

// 源代码打包任务
task sourcesJar(type: Jar) {
  archiveClassifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

// 文档包任务 - Android 库需要特殊处理
task androidJavadocs(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  android.libraryVariants.all { variant ->
    classpath += variant.javaCompileProvider.get().classpath
  }
  exclude '**/R.html', '**/BuildConfig.html'
}

task javadocJar(type: Jar, dependsOn: androidJavadocs) {
  archiveClassifier = 'javadoc'
  from androidJavadocs.destinationDir
}

// 发布配置 - 暂时注释，专注于插件发布
/*
afterEvaluate {
  publishing {
    publications {
      release(MavenPublication) {
        from components.getByName("release")
        artifactId = 'burial-timer'
        
        artifact sourcesJar
        artifact javadocJar
        
        pom {
          name = 'Burial Timer'
          description = 'Android method timing library for performance monitoring'
          url = 'https://github.com/your-username/burial-plugin'
          
          licenses {
            license {
              name = 'Apache License, Version 2.0'
              url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution = 'repo'
            }
          }
          
          developers {
            developer {
              id = 'yan157'
              name = 'Yan'
              email = 'your-email@example.com'
            }
          }
          
          scm {
            connection = 'scm:git:git://github.com/your-username/burial-plugin.git'
            developerConnection = 'scm:git:ssh://github.com/your-username/burial-plugin.git'
            url = 'https://github.com/your-username/burial-plugin'
          }
        }
      }
    }
    
    repositories {
      maven {
        name = 'OSSRH'
        url = version.endsWith('SNAPSHOT') ? 
          'https://s01.oss.sonatype.org/content/repositories/snapshots/' :
          'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
        
        credentials {
          username = findProperty('ossrhUsername') ?: System.getenv('OSSRH_USERNAME')
          password = findProperty('ossrhPassword') ?: System.getenv('OSSRH_PASSWORD')
        }
      }
    }
  }
  
  // 签名配置
  signing {
    sign publishing.publications.release
  }
}
*/

afterEvaluate {
  publishing {
    publications {
      release(MavenPublication) {
        from components.getByName("release")
        groupId = 'com.github.zhiying94'
        artifactId = 'burialTimer'
        version = project.version
      }
    }
  }
}